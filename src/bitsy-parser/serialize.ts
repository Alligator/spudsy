import { BitsyGame } from '.';

const id = (numId: number) => numId.toString(36);
const colour = (rgbColour: string): Array<string> => rgbColour.match(/\d+/g) || [];

function serializePalettes(game: BitsyGame): Array<string> {
  const output = [];

  for (let i = 0; i < game.palettes.length; i++) {
    const palette = game.palettes[i];
    output.push(`PAL ${id(palette.id)}`);

    if (palette.name) {
      output.push(`NAME ${palette.name}`);
    }

    output.push(colour(palette.bg).join(','));
    output.push(colour(palette.tile).join(','));
    output.push(colour(palette.sprite).join(','));

    output.push('');
  }

  return output;
}

function serializeRooms(game: BitsyGame): Array<string> {
  const output = [];

  for (let i = 0; i < game.rooms.length; i++) {
    const room = game.rooms[i];
    output.push(`ROOM ${id(room.id)}`);

    for (let y = 0; y < 16; y++) {
      const tiles = room.tiles.slice(y * 16, y * 16 + 16);
      output.push(tiles.map(id).join(','));
    }

    if (room.name) {
      output.push(`NAME ${room.name}`);
    }

    output.push(`PAL ${id(room.paletteId)}`);

    output.push('');
  }

  return output;
}

function serializeTiles(game: BitsyGame): Array<string> {
  const output = [];

  for (let i = 0; i < game.tiles.length; i++) {
    const tile = game.tiles[i];
    output.push(`TIL ${id(tile.id)}`);

    // TODO: support multiple frames
    for (let y = 0; y < 8; y++) {
      const pixels = tile.frames[0].slice(y * 8, y * 8 + 8);
      output.push(pixels.map(p => p ? '1' : '0').join(''));
    }

    if (tile.name) {
      output.push(`NAME ${tile.name}`);
    }

    output.push('');
  }

  return output;
}

function serializeBitsy(game: BitsyGame): Array<string> {
  let output = [];
  output.push(game.title);
  output.push('');
  output.push('# GENERATED BY SPUDSY');
  output.push('');
  output.push('! ROOM_FORMAT 1');
  output.push('');

  output = output.concat(serializePalettes(game));
  output = output.concat(serializeRooms(game));
  output = output.concat(serializeTiles(game));

  return output;
}

export default serializeBitsy;